name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: backend/.venv
          key: venv-${{ runner.os }}-${{ hashFiles('backend/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-root --without proto --no-interaction

      - name: Run tests with pytest (excluding proto)
        run: poetry run pytest -m "not proto" --cov --cov-report=xml

      - name: Check Python coverage threshold
        run: |
          COVERAGE=$(poetry run coverage report --show-missing | grep TOTAL | awk '{print $4}' | sed 's/%//')
          echo "Python Coverage: $COVERAGE%"
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "Error: Python coverage $COVERAGE% is below required 80%"
            exit 1
          fi

      - name: Run Ruff linting
        run: poetry run ruff check .

      - name: Run Black formatting check
        run: poetry run black --check .

      - name: Run isort import sorting check
        run: poetry run isort --check-only .

      - name: Upload backend coverage
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/coverage.xml

  frontend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run tests with coverage
        run: npm test -- --watchAll=false --coverage

      - name: Check Jest coverage threshold
        run: |
          if [ ! -f coverage/lcov.info ]; then
            echo "Error: Coverage file not found"
            exit 1
          fi
          
          # Parse coverage from lcov.info and check if >= 80%
          COVERAGE=$(grep -o "LF:[0-9]*" coverage/lcov.info | cut -d: -f2 | awk '{total+=$1} END {print total}')
          HIT=$(grep -o "LH:[0-9]*" coverage/lcov.info | cut -d: -f2 | awk '{total+=$1} END {print total}')
          
          if [ "$COVERAGE" -gt 0 ]; then
            PERCENTAGE=$(echo "scale=1; $HIT * 100 / $COVERAGE" | bc -l)
            echo "Coverage: $PERCENTAGE%"
            if (( $(echo "$PERCENTAGE < 80" | bc -l) )); then
              echo "Error: Coverage $PERCENTAGE% is below required 80%"
              exit 1
            fi
          fi

      - name: Upload frontend coverage
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage/
